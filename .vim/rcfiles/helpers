"helper functions

" Show syntax highlighting groups for word under cursor
function! s:SynStack()
    if !exists("*synstack")
        return
    endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc
nnoremap <C-S-P> :call <SID>SynStack()<CR>

" easily navigate errors in neomake
function! s:LocationNext()
    try
        lnext
    catch
        try | lfirst | catch | endtry
    endtry
endfunction
nnoremap <leader>E :call <SID>LocationNext()<cr>
nnoremap <silent><leader>e :lclose<CR> " close error window

function! s:GrepOperator(type)
    let saved_unnamed_register = @@
    if a:type ==# 'v'
        normal! `<v`>y
    elseif a:type ==# 'char'
        normal! `[y`]
    else
        return
    endif
    silent execute "grep! -R " . shellescape(@@) . " ."
    copen
    let @@ = saved_unnamed_register
endfunction

nnoremap <leader>g :set operatorfunc=<SID>GrepOperator<cr>g@
vnoremap <leader>g :<c-u>call <SID>GrepOperator(visualmode())<cr>

function! ShowRcFiles()
    if len(filter(copy(getbufinfo()), 'v:val.name =~ "vimrc" && v:val.listed')) == 0
        enew
        :1r !ls $HOME/.vim/{rcfiles,rcplugins}/*
        :normal ggdd
        setlocal norelativenumber
        setlocal nomodified
        :silent file vimrc
    endif
endfunction
nnoremap <silent> <leader>rc :call ShowRcFiles()<cr>

" vim:ft=vim
